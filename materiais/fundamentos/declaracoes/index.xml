<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Declarações on UnBalloon</title><link>https://unballoon.github.io/materiais/fundamentos/declaracoes/</link><description>Recent content in Declarações on UnBalloon</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><atom:link href="https://unballoon.github.io/materiais/fundamentos/declaracoes/index.xml" rel="self" type="application/rss+xml"/><item><title>Strings</title><link>https://unballoon.github.io/materiais/fundamentos/declaracoes/string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://unballoon.github.io/materiais/fundamentos/declaracoes/string/</guid><description>No C++ representa uma sequência de caracteres
Podemos declarar uma string como:
string nomevar; string nomevar = constante; string nomevar = char ∗ variavel; string nomevar(char ∗ variavel); string nomevar(tamanho, constante char); Concatenação Podemos usar o operador &amp;ldquo;+&amp;rdquo; para concatenar duas strings
#include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; int main(){ string a = &amp;#34;abc&amp;#34;; string b = &amp;#34;def&amp;#34;; string c = a + b; cout&amp;lt;&amp;lt;c&amp;lt;&amp;lt;endl; // abcdef return 0; } Transformando um inteiro em string Podemos transformar um inteiro em uma string usando a função &amp;ldquo;to_string()&amp;rdquo;</description></item><item><title>Pairs</title><link>https://unballoon.github.io/materiais/fundamentos/declaracoes/pair/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://unballoon.github.io/materiais/fundamentos/declaracoes/pair/</guid><description>Um &amp;ldquo;pair&amp;rdquo; é um contêiner que consiste de dois tipos de dados ou objetos.
Declaramos um pair como:
pair&amp;lt;tipodado1, tipodado2&amp;gt; variavel; Podemos inicializá-lo usando o make_pair ou diretamente:
variavel = make_pair(dado1, dado2); variavel = {dado1, dado2}; O primeiro elemento é acessado usando o &amp;ldquo;first&amp;rdquo; e o segundo usando &amp;ldquo;second&amp;rdquo; variavel.first; variavel.second; Exemplo 1: Um Pair que armazena 2 inteiros #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; int main(){ pair&amp;lt;int, int&amp;gt; pii; pii = {5, 10}; cout&amp;lt;&amp;lt; pii.</description></item></channel></rss>