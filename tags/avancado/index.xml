<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>avancado on UnBalloon</title><link>https://unballoon.github.io/tags/avancado/</link><description>Recent content in avancado on UnBalloon</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><atom:link href="https://unballoon.github.io/tags/avancado/index.xml" rel="self" type="application/rss+xml"/><item><title>Sparse Table</title><link>https://unballoon.github.io/materiais/ed/sparse_table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://unballoon.github.io/materiais/ed/sparse_table/</guid><description>Nesse tutorial vamos falar sobre uma estrutura de dados chamada Sparse Table, que é uma estrutura de dados poderosa para resolvermos range queries de algumas operações específicas em complexidades superiores as de uma Segment Tree por exemplo.
Por exemplo, uma Sparse Table conseque resolver range minimum(ou maximum) query em O(1), enquanto numa segment tree precisaríamos de O(log n). Outro exemplo poderia ser range query de gcd, numa Segment Tree podemos resolver range queries de GCD em O(log^2 n), já na sparse table conseguimos isso em O(log n).</description></item><item><title>Lowest Common Ancestor</title><link>https://unballoon.github.io/materiais/avancados/lca/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://unballoon.github.io/materiais/avancados/lca/</guid><description>Lowest Common ancestor (LCA) - ou ancestral comum mais baixo, é o nome típico dado para o seguinte problema: dado uma Árvore cuja raiz é um vértice arbitrário e dois vértices u,v que a pertencem, diga qual é o nó mais baixo(relativo a raiz) que é ancestral de u,v.
Por exemplo na imagem a cima, o LCA de 2 e 3 é 1, o LCA de 6 e 7 é 0, e o LCA de 1 e 2 é 1.</description></item></channel></rss>